name: Auto update project wiki

on:
  push:
    branches:
      - master
    tags:
      - 'v*' # Initializes on any new tag

jobs:
  update_wiki:
    runs-on: ubuntu-latest
    steps:
      - name: Checkouting main code
        uses: actions/checkout@v2
      - name: Parsing git info
        run: |
          echo "::set-env name=LAST_COMMIT_AUTHOR_EMAIL::$(git show -s --format='%ae' HEAD)"
          echo "::set-env name=LAST_COMMIT_AUTHOR_NAME::$(git show -s --format='%an' HEAD)"
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)
          if [ "$BRANCH_NAME" == 'HEAD' ]; then
            BRANCH_NAME=$(git describe --tags --abbrev=0)
          fi;
          echo "::set-env name=BRANCH_NAME::$BRANCH_NAME"
      - name: Checking for required secrets
        run: |
          if [ -z "${{ secrets.WIKI_GITHUB_UPDATE_TOKEN }}" ]; then
            echo "Secret WIKI_GITHUB_UPDATE_TOKEN is missing. Use this link to create required token -> https://github.com/settings/tokens/new?scopes=repo&description=wiki%20api%20generator <- and than add to project secrets."
            exit 1
          fi;
          if [ -z "${{ secrets.WIKI_GITHUB_UPDATE_USER }}" ]; then
            echo "Secret WIKI_GITHUB_UPDATE_USER is missing. Set this to username for who token belongs."
            exit 2
          fi;
      - name: Cloning old wiki
        run: |
          mkdir .docs.old
          cd .docs.old
          git init
          git remote add origin https://${{ secrets.WIKI_GITHUB_UPDATE_USER }}:${{ secrets.WIKI_GITHUB_UPDATE_TOKEN }}@github.com/${{ github.repository	}}.wiki.git
          git config --local gc.auto 0
          git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 origin
          git checkout ${BRANCH_NAME} 2>/dev/null || git checkout -b ${BRANCH_NAME}
          git reset --hard
          cd ..
      - name: Installing hidden clean/phpdoc-md
        run: composer require --dev clean/phpdoc-md
      - name: Creating configuration
        run: |
          cat > .phpdoc-md <<EOF
          <?php
          return (object)[
            'rootNamespace' => 'Imponeer',
            'destDirectory' => '.docs',
            'format' => 'github',
            'classes' => [
              '\Imponeer\ToArrayInterface',
            ],
          ];
          EOF
      - name: View config
        run: cat .phpdoc-md
      - name: Generating docs...
        run: ./vendor/bin/phpdoc-md
      - name: Updating docs folder
        run: cp -r ./.docs.old/.git ./.docs/.git
      - name: Renaming README.md -> HOME.md
        working-directory: .docs/
        run: mv README.md HOME.md
      - name: Fixing autogenerated markdown file contents
        working-directory: .docs/
        run: |
          find *.md -type f -exec sed -i 's/\.md//g' {} \;
          sed -i '1d' HOME.md
          sed -i '1i# API Documentation' HOME.md
          sed -i '2i> Notice: Wiki was automatic generated from project sources as project API documentation. Do not edit manually!' HOME.md
          sed -i "3i\ " HOME.md
      - name: Configuring commit author
        working-directory: .docs/
        run: |
          git config --local user.email "$LAST_COMMIT_AUTHOR_EMAIL"
          git config --local user.name "$LAST_COMMIT_AUTHOR_NAME"
      - name: Checking what docs where updated
        working-directory: .docs/
        run: git status
      - name: Commiting docs update
        working-directory: .docs/
        run: |
          git add -u :/
          git add .
          git commit -m "Automatically generated for https://github.com/${{ github.repository }}/commit/${GITHUB_SHA}" || true
      - name: Pushing docs update
        working-directory: .docs/
        run: git push -u origin ${BRANCH_NAME}
